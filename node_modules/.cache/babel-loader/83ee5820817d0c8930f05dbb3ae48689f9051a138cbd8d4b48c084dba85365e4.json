{"ast":null,"code":"/*\nLanguage: Nix\nAuthor: Domen Kožar <domen@dev.si>\nDescription: Nix functional language\nWebsite: http://nixos.org/nix\nCategory: system\n*/\n\n/** @type LanguageFn */\nfunction nix(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = {\n    keyword: [\"assert\", \"else\", \"if\", \"in\", \"inherit\", \"let\", \"or\", \"rec\", \"then\", \"with\"],\n    literal: [\"true\", \"false\", \"null\"],\n    built_in: [\n    // toplevel builtins\n    \"abort\", \"baseNameOf\", \"builtins\", \"derivation\", \"derivationStrict\", \"dirOf\", \"fetchGit\", \"fetchMercurial\", \"fetchTarball\", \"fetchTree\", \"fromTOML\", \"import\", \"isNull\", \"map\", \"placeholder\", \"removeAttrs\", \"scopedImport\", \"throw\", \"toString\"]\n  };\n  const BUILTINS = {\n    scope: 'built_in',\n    match: regex.either(...[\"abort\", \"add\", \"addDrvOutputDependencies\", \"addErrorContext\", \"all\", \"any\", \"appendContext\", \"attrNames\", \"attrValues\", \"baseNameOf\", \"bitAnd\", \"bitOr\", \"bitXor\", \"break\", \"builtins\", \"catAttrs\", \"ceil\", \"compareVersions\", \"concatLists\", \"concatMap\", \"concatStringsSep\", \"convertHash\", \"currentSystem\", \"currentTime\", \"deepSeq\", \"derivation\", \"derivationStrict\", \"dirOf\", \"div\", \"elem\", \"elemAt\", \"false\", \"fetchGit\", \"fetchMercurial\", \"fetchTarball\", \"fetchTree\", \"fetchurl\", \"filter\", \"filterSource\", \"findFile\", \"flakeRefToString\", \"floor\", \"foldl'\", \"fromJSON\", \"fromTOML\", \"functionArgs\", \"genList\", \"genericClosure\", \"getAttr\", \"getContext\", \"getEnv\", \"getFlake\", \"groupBy\", \"hasAttr\", \"hasContext\", \"hashFile\", \"hashString\", \"head\", \"import\", \"intersectAttrs\", \"isAttrs\", \"isBool\", \"isFloat\", \"isFunction\", \"isInt\", \"isList\", \"isNull\", \"isPath\", \"isString\", \"langVersion\", \"length\", \"lessThan\", \"listToAttrs\", \"map\", \"mapAttrs\", \"match\", \"mul\", \"nixPath\", \"nixVersion\", \"null\", \"parseDrvName\", \"parseFlakeRef\", \"partition\", \"path\", \"pathExists\", \"placeholder\", \"readDir\", \"readFile\", \"readFileType\", \"removeAttrs\", \"replaceStrings\", \"scopedImport\", \"seq\", \"sort\", \"split\", \"splitVersion\", \"storeDir\", \"storePath\", \"stringLength\", \"sub\", \"substring\", \"tail\", \"throw\", \"toFile\", \"toJSON\", \"toPath\", \"toString\", \"toXML\", \"trace\", \"traceVerbose\", \"true\", \"tryEval\", \"typeOf\", \"unsafeDiscardOutputDependency\", \"unsafeDiscardStringContext\", \"unsafeGetAttrPos\", \"warn\", \"zipAttrsWith\"].map(b => `builtins\\\\.${b}`)),\n    relevance: 10\n  };\n  const IDENTIFIER_REGEX = '[A-Za-z_][A-Za-z0-9_\\'-]*';\n  const LOOKUP_PATH = {\n    scope: 'symbol',\n    match: new RegExp(`<${IDENTIFIER_REGEX}(/${IDENTIFIER_REGEX})*>`)\n  };\n  const PATH_PIECE = \"[A-Za-z0-9_\\\\+\\\\.-]+\";\n  const PATH = {\n    scope: 'symbol',\n    match: new RegExp(`(\\\\.\\\\.|\\\\.|~)?/(${PATH_PIECE})?(/${PATH_PIECE})*(?=[\\\\s;])`)\n  };\n  const OPERATOR_WITHOUT_MINUS_REGEX = regex.either(...['==', '=', '\\\\+\\\\+', '\\\\+', '<=', '<\\\\|', '<', '>=', '>', '->', '//', '/', '!=', '!', '\\\\|\\\\|', '\\\\|>', '\\\\?', '\\\\*', '&&']);\n  const OPERATOR = {\n    scope: 'operator',\n    match: regex.concat(OPERATOR_WITHOUT_MINUS_REGEX, /(?!-)/),\n    relevance: 0\n  };\n\n  // '-' is being handled by itself to ensure we are able to tell the difference\n  // between a dash in an identifier and a minus operator\n  const NUMBER = {\n    scope: 'number',\n    match: new RegExp(`${hljs.NUMBER_RE}(?!-)`),\n    relevance: 0\n  };\n  const MINUS_OPERATOR = {\n    variants: [{\n      scope: 'operator',\n      beforeMatch: /\\s/,\n      // The (?!>) is used to ensure this doesn't collide with the '->' operator\n      begin: /-(?!>)/\n    }, {\n      begin: [new RegExp(`${hljs.NUMBER_RE}`), /-/, /(?!>)/],\n      beginScope: {\n        1: 'number',\n        2: 'operator'\n      }\n    }, {\n      begin: [OPERATOR_WITHOUT_MINUS_REGEX, /-/, /(?!>)/],\n      beginScope: {\n        1: 'operator',\n        2: 'operator'\n      }\n    }],\n    relevance: 0\n  };\n  const ATTRS = {\n    beforeMatch: /(^|\\{|;)\\s*/,\n    begin: new RegExp(`${IDENTIFIER_REGEX}(\\\\.${IDENTIFIER_REGEX})*\\\\s*=(?!=)`),\n    returnBegin: true,\n    relevance: 0,\n    contains: [{\n      scope: 'attr',\n      match: new RegExp(`${IDENTIFIER_REGEX}(\\\\.${IDENTIFIER_REGEX})*(?=\\\\s*=)`),\n      relevance: 0.2\n    }]\n  };\n  const NORMAL_ESCAPED_DOLLAR = {\n    scope: 'char.escape',\n    match: /\\\\\\$/\n  };\n  const INDENTED_ESCAPED_DOLLAR = {\n    scope: 'char.escape',\n    match: /''\\$/\n  };\n  const ANTIQUOTE = {\n    scope: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS\n  };\n  const ESCAPED_DOUBLEQUOTE = {\n    scope: 'char.escape',\n    match: /'''/\n  };\n  const ESCAPED_LITERAL = {\n    scope: 'char.escape',\n    match: /\\\\(?!\\$)./\n  };\n  const STRING = {\n    scope: 'string',\n    variants: [{\n      begin: \"''\",\n      end: \"''\",\n      contains: [INDENTED_ESCAPED_DOLLAR, ANTIQUOTE, ESCAPED_DOUBLEQUOTE, ESCAPED_LITERAL]\n    }, {\n      begin: '\"',\n      end: '\"',\n      contains: [NORMAL_ESCAPED_DOLLAR, ANTIQUOTE, ESCAPED_LITERAL]\n    }]\n  };\n  const FUNCTION_PARAMS = {\n    scope: 'params',\n    match: new RegExp(`${IDENTIFIER_REGEX}\\\\s*:(?=\\\\s)`)\n  };\n  const EXPRESSIONS = [NUMBER, hljs.HASH_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT(/\\/\\*\\*(?!\\/)/, /\\*\\//, {\n    subLanguage: 'markdown',\n    relevance: 0\n  }), BUILTINS, STRING, LOOKUP_PATH, PATH, FUNCTION_PARAMS, ATTRS, MINUS_OPERATOR, OPERATOR];\n  ANTIQUOTE.contains = EXPRESSIONS;\n  const REPL = [{\n    scope: 'meta.prompt',\n    match: /^nix-repl>(?=\\s)/,\n    relevance: 10\n  }, {\n    scope: 'meta',\n    beforeMatch: /\\s+/,\n    begin: /:([a-z]+|\\?)/\n  }];\n  return {\n    name: 'Nix',\n    aliases: [\"nixos\"],\n    keywords: KEYWORDS,\n    contains: EXPRESSIONS.concat(REPL)\n  };\n}\nexport { nix as default };","map":{"version":3,"names":["nix","hljs","regex","KEYWORDS","keyword","literal","built_in","BUILTINS","scope","match","either","map","b","relevance","IDENTIFIER_REGEX","LOOKUP_PATH","RegExp","PATH_PIECE","PATH","OPERATOR_WITHOUT_MINUS_REGEX","OPERATOR","concat","NUMBER","NUMBER_RE","MINUS_OPERATOR","variants","beforeMatch","begin","beginScope","ATTRS","returnBegin","contains","NORMAL_ESCAPED_DOLLAR","INDENTED_ESCAPED_DOLLAR","ANTIQUOTE","end","keywords","ESCAPED_DOUBLEQUOTE","ESCAPED_LITERAL","STRING","FUNCTION_PARAMS","EXPRESSIONS","HASH_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","subLanguage","REPL","name","aliases","default"],"sources":["/Users/yiyiwang/Documents/coding/projects/portfolio/node_modules/highlight.js/es/languages/nix.js"],"sourcesContent":["/*\nLanguage: Nix\nAuthor: Domen Kožar <domen@dev.si>\nDescription: Nix functional language\nWebsite: http://nixos.org/nix\nCategory: system\n*/\n\n/** @type LanguageFn */\nfunction nix(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = {\n    keyword: [\n      \"assert\",\n      \"else\",\n      \"if\",\n      \"in\",\n      \"inherit\",\n      \"let\",\n      \"or\",\n      \"rec\",\n      \"then\",\n      \"with\",\n    ],\n    literal: [\n      \"true\",\n      \"false\",\n      \"null\",\n    ],\n    built_in: [\n      // toplevel builtins\n      \"abort\",\n      \"baseNameOf\",\n      \"builtins\",\n      \"derivation\",\n      \"derivationStrict\",\n      \"dirOf\",\n      \"fetchGit\",\n      \"fetchMercurial\",\n      \"fetchTarball\",\n      \"fetchTree\",\n      \"fromTOML\",\n      \"import\",\n      \"isNull\",\n      \"map\",\n      \"placeholder\",\n      \"removeAttrs\",\n      \"scopedImport\",\n      \"throw\",\n      \"toString\",\n    ],\n  };\n\n  const BUILTINS = {\n    scope: 'built_in',\n    match: regex.either(...[\n      \"abort\",\n      \"add\",\n      \"addDrvOutputDependencies\",\n      \"addErrorContext\",\n      \"all\",\n      \"any\",\n      \"appendContext\",\n      \"attrNames\",\n      \"attrValues\",\n      \"baseNameOf\",\n      \"bitAnd\",\n      \"bitOr\",\n      \"bitXor\",\n      \"break\",\n      \"builtins\",\n      \"catAttrs\",\n      \"ceil\",\n      \"compareVersions\",\n      \"concatLists\",\n      \"concatMap\",\n      \"concatStringsSep\",\n      \"convertHash\",\n      \"currentSystem\",\n      \"currentTime\",\n      \"deepSeq\",\n      \"derivation\",\n      \"derivationStrict\",\n      \"dirOf\",\n      \"div\",\n      \"elem\",\n      \"elemAt\",\n      \"false\",\n      \"fetchGit\",\n      \"fetchMercurial\",\n      \"fetchTarball\",\n      \"fetchTree\",\n      \"fetchurl\",\n      \"filter\",\n      \"filterSource\",\n      \"findFile\",\n      \"flakeRefToString\",\n      \"floor\",\n      \"foldl'\",\n      \"fromJSON\",\n      \"fromTOML\",\n      \"functionArgs\",\n      \"genList\",\n      \"genericClosure\",\n      \"getAttr\",\n      \"getContext\",\n      \"getEnv\",\n      \"getFlake\",\n      \"groupBy\",\n      \"hasAttr\",\n      \"hasContext\",\n      \"hashFile\",\n      \"hashString\",\n      \"head\",\n      \"import\",\n      \"intersectAttrs\",\n      \"isAttrs\",\n      \"isBool\",\n      \"isFloat\",\n      \"isFunction\",\n      \"isInt\",\n      \"isList\",\n      \"isNull\",\n      \"isPath\",\n      \"isString\",\n      \"langVersion\",\n      \"length\",\n      \"lessThan\",\n      \"listToAttrs\",\n      \"map\",\n      \"mapAttrs\",\n      \"match\",\n      \"mul\",\n      \"nixPath\",\n      \"nixVersion\",\n      \"null\",\n      \"parseDrvName\",\n      \"parseFlakeRef\",\n      \"partition\",\n      \"path\",\n      \"pathExists\",\n      \"placeholder\",\n      \"readDir\",\n      \"readFile\",\n      \"readFileType\",\n      \"removeAttrs\",\n      \"replaceStrings\",\n      \"scopedImport\",\n      \"seq\",\n      \"sort\",\n      \"split\",\n      \"splitVersion\",\n      \"storeDir\",\n      \"storePath\",\n      \"stringLength\",\n      \"sub\",\n      \"substring\",\n      \"tail\",\n      \"throw\",\n      \"toFile\",\n      \"toJSON\",\n      \"toPath\",\n      \"toString\",\n      \"toXML\",\n      \"trace\",\n      \"traceVerbose\",\n      \"true\",\n      \"tryEval\",\n      \"typeOf\",\n      \"unsafeDiscardOutputDependency\",\n      \"unsafeDiscardStringContext\",\n      \"unsafeGetAttrPos\",\n      \"warn\",\n      \"zipAttrsWith\",\n    ].map(b => `builtins\\\\.${b}`)),\n    relevance: 10,\n  };\n\n  const IDENTIFIER_REGEX = '[A-Za-z_][A-Za-z0-9_\\'-]*';\n\n  const LOOKUP_PATH = {\n    scope: 'symbol',\n    match: new RegExp(`<${IDENTIFIER_REGEX}(/${IDENTIFIER_REGEX})*>`),\n  };\n\n  const PATH_PIECE = \"[A-Za-z0-9_\\\\+\\\\.-]+\";\n  const PATH = {\n    scope: 'symbol',\n    match: new RegExp(`(\\\\.\\\\.|\\\\.|~)?/(${PATH_PIECE})?(/${PATH_PIECE})*(?=[\\\\s;])`),\n  };\n\n  const OPERATOR_WITHOUT_MINUS_REGEX = regex.either(...[\n    '==',\n    '=',\n    '\\\\+\\\\+',\n    '\\\\+',\n    '<=',\n    '<\\\\|',\n    '<',\n    '>=',\n    '>',\n    '->',\n    '//',\n    '/',\n    '!=',\n    '!',\n    '\\\\|\\\\|',\n    '\\\\|>',\n    '\\\\?',\n    '\\\\*',\n    '&&',\n  ]);\n\n  const OPERATOR = {\n    scope: 'operator',\n    match: regex.concat(OPERATOR_WITHOUT_MINUS_REGEX, /(?!-)/),\n    relevance: 0,\n  };\n\n  // '-' is being handled by itself to ensure we are able to tell the difference\n  // between a dash in an identifier and a minus operator\n  const NUMBER = {\n    scope: 'number',\n    match: new RegExp(`${hljs.NUMBER_RE}(?!-)`),\n    relevance: 0,\n  };\n  const MINUS_OPERATOR = {\n    variants: [\n      {\n        scope: 'operator',\n        beforeMatch: /\\s/,\n        // The (?!>) is used to ensure this doesn't collide with the '->' operator\n        begin: /-(?!>)/,\n      },\n      {\n        begin: [\n          new RegExp(`${hljs.NUMBER_RE}`),\n          /-/,\n          /(?!>)/,\n        ],\n        beginScope: {\n          1: 'number',\n          2: 'operator'\n        },\n      },\n      {\n        begin: [\n          OPERATOR_WITHOUT_MINUS_REGEX,\n          /-/,\n          /(?!>)/,\n        ],\n        beginScope: {\n          1: 'operator',\n          2: 'operator'\n        },\n      },\n    ],\n    relevance: 0,\n  };\n\n  const ATTRS = {\n    beforeMatch: /(^|\\{|;)\\s*/,\n    begin: new RegExp(`${IDENTIFIER_REGEX}(\\\\.${IDENTIFIER_REGEX})*\\\\s*=(?!=)`),\n    returnBegin: true,\n    relevance: 0,\n    contains: [\n      {\n        scope: 'attr',\n        match: new RegExp(`${IDENTIFIER_REGEX}(\\\\.${IDENTIFIER_REGEX})*(?=\\\\s*=)`),\n        relevance: 0.2,\n      }\n    ],\n  };\n\n  const NORMAL_ESCAPED_DOLLAR = {\n    scope: 'char.escape',\n    match: /\\\\\\$/,\n  };\n  const INDENTED_ESCAPED_DOLLAR = {\n    scope: 'char.escape',\n    match: /''\\$/,\n  };\n  const ANTIQUOTE = {\n    scope: 'subst',\n    begin: /\\$\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n  };\n  const ESCAPED_DOUBLEQUOTE = {\n    scope: 'char.escape',\n    match: /'''/,\n  };\n  const ESCAPED_LITERAL = {\n    scope: 'char.escape',\n    match: /\\\\(?!\\$)./,\n  };\n  const STRING = {\n    scope: 'string',\n    variants: [\n      {\n        begin: \"''\",\n        end: \"''\",\n        contains: [\n          INDENTED_ESCAPED_DOLLAR,\n          ANTIQUOTE,\n          ESCAPED_DOUBLEQUOTE,\n          ESCAPED_LITERAL,\n        ],\n      },\n      {\n        begin: '\"',\n        end: '\"',\n        contains: [\n          NORMAL_ESCAPED_DOLLAR,\n          ANTIQUOTE,\n          ESCAPED_LITERAL,\n        ],\n      },\n    ],\n  };\n\n  const FUNCTION_PARAMS = {\n    scope: 'params',\n    match: new RegExp(`${IDENTIFIER_REGEX}\\\\s*:(?=\\\\s)`),\n  };\n\n  const EXPRESSIONS = [\n    NUMBER,\n    hljs.HASH_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      /\\/\\*\\*(?!\\/)/,\n      /\\*\\//,\n      {\n        subLanguage: 'markdown',\n        relevance: 0\n      }\n    ),\n    BUILTINS,\n    STRING,\n    LOOKUP_PATH,\n    PATH,\n    FUNCTION_PARAMS,\n    ATTRS,\n    MINUS_OPERATOR,\n    OPERATOR,\n  ];\n\n  ANTIQUOTE.contains = EXPRESSIONS;\n\n  const REPL = [\n    {\n      scope: 'meta.prompt',\n      match: /^nix-repl>(?=\\s)/,\n      relevance: 10,\n    },\n    {\n      scope: 'meta',\n      beforeMatch: /\\s+/,\n      begin: /:([a-z]+|\\?)/,\n    },\n  ];\n\n  return {\n    name: 'Nix',\n    aliases: [ \"nixos\" ],\n    keywords: KEYWORDS,\n    contains: EXPRESSIONS.concat(REPL),\n  };\n}\n\nexport { nix as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}