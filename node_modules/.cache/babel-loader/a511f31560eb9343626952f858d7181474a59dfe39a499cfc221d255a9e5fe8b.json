{"ast":null,"code":"/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = ['abs', 'accept', 'alarm', 'and', 'atan2', 'bind', 'binmode', 'bless', 'break', 'caller', 'chdir', 'chmod', 'chomp', 'chop', 'chown', 'chr', 'chroot', 'class', 'close', 'closedir', 'connect', 'continue', 'cos', 'crypt', 'dbmclose', 'dbmopen', 'defined', 'delete', 'die', 'do', 'dump', 'each', 'else', 'elsif', 'endgrent', 'endhostent', 'endnetent', 'endprotoent', 'endpwent', 'endservent', 'eof', 'eval', 'exec', 'exists', 'exit', 'exp', 'fcntl', 'field', 'fileno', 'flock', 'for', 'foreach', 'fork', 'format', 'formline', 'getc', 'getgrent', 'getgrgid', 'getgrnam', 'gethostbyaddr', 'gethostbyname', 'gethostent', 'getlogin', 'getnetbyaddr', 'getnetbyname', 'getnetent', 'getpeername', 'getpgrp', 'getpriority', 'getprotobyname', 'getprotobynumber', 'getprotoent', 'getpwent', 'getpwnam', 'getpwuid', 'getservbyname', 'getservbyport', 'getservent', 'getsockname', 'getsockopt', 'given', 'glob', 'gmtime', 'goto', 'grep', 'gt', 'hex', 'if', 'index', 'int', 'ioctl', 'join', 'keys', 'kill', 'last', 'lc', 'lcfirst', 'length', 'link', 'listen', 'local', 'localtime', 'log', 'lstat', 'lt', 'ma', 'map', 'method', 'mkdir', 'msgctl', 'msgget', 'msgrcv', 'msgsnd', 'my', 'ne', 'next', 'no', 'not', 'oct', 'open', 'opendir', 'or', 'ord', 'our', 'pack', 'package', 'pipe', 'pop', 'pos', 'print', 'printf', 'prototype', 'push', 'q|0', 'qq', 'quotemeta', 'qw', 'qx', 'rand', 'read', 'readdir', 'readline', 'readlink', 'readpipe', 'recv', 'redo', 'ref', 'rename', 'require', 'reset', 'return', 'reverse', 'rewinddir', 'rindex', 'rmdir', 'say', 'scalar', 'seek', 'seekdir', 'select', 'semctl', 'semget', 'semop', 'send', 'setgrent', 'sethostent', 'setnetent', 'setpgrp', 'setpriority', 'setprotoent', 'setpwent', 'setservent', 'setsockopt', 'shift', 'shmctl', 'shmget', 'shmread', 'shmwrite', 'shutdown', 'sin', 'sleep', 'socket', 'socketpair', 'sort', 'splice', 'split', 'sprintf', 'sqrt', 'srand', 'stat', 'state', 'study', 'sub', 'substr', 'symlink', 'syscall', 'sysopen', 'sysread', 'sysseek', 'system', 'syswrite', 'tell', 'telldir', 'tie', 'tied', 'time', 'times', 'tr', 'truncate', 'uc', 'ucfirst', 'umask', 'undef', 'unless', 'unlink', 'unpack', 'unshift', 'untie', 'until', 'use', 'utime', 'values', 'vec', 'wait', 'waitpid', 'wantarray', 'warn', 'when', 'while', 'write', 'x|0', 'xor', 'y|0'];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const ATTR = {\n    scope: 'attr',\n    match: /\\s+:\\s*\\w+(\\s*\\(.*?\\))?/\n  };\n  const VAR = {\n    scope: 'variable',\n    variants: [{\n      begin: /\\$\\d/\n    }, {\n      begin: regex.concat(/[$%@](?!\")(\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n      // negative look-ahead tries to avoid matching patterns that are not\n      // Perl at all like $ident$, @ident@, etc.\n      `(?![A-Za-z])(?![@$%])`)\n    }, {\n      // Only $= is a special Perl variable and one can't declare @= or %=.\n      begin: /[$%@](?!\")[^\\s\\w{=]|\\$=/,\n      relevance: 0\n    }],\n    contains: [ATTR]\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n    // decimal numbers:\n    // include the case where a number starts with a dot (eg. .9), and\n    // the leading 0? avoids mixing the first and second match on 0.x cases\n    {\n      match: /0?\\.[0-9][0-9_]+\\b/\n    },\n    // include the special versioned number (eg. v5.38)\n    {\n      match: /\\bv?(0|[1-9][0-9_]*(\\.[0-9_]+)?|[1-9][0-9_]*)\\b/\n    },\n    // non-decimal numbers:\n    {\n      match: /\\b0[0-7][0-7_]*\\b/\n    }, {\n      match: /\\b0x[0-9a-fA-F][0-9a-fA-F_]*\\b/\n    }, {\n      match: /\\b0b[0-1][0-1_]*\\b/\n    }],\n    relevance: 0\n  };\n  const STRING_CONTAINS = [hljs.BACKSLASH_ESCAPE, SUBST, VAR];\n  const REGEX_DELIMS = [/!/, /\\//, /\\|/, /\\?/, /'/, /\"/,\n  // valid but infrequent and weird\n  /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = close === '\\\\1' ? close : regex.concat(close, open);\n    return regex.concat(regex.concat(\"(?:\", prefix, \")\"), open, /(?:\\\\.|[^\\\\\\/])*?/, middle, /(?:\\\\.|[^\\\\\\/])*?/, close, REGEX_MODIFIERS);\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return regex.concat(regex.concat(\"(?:\", prefix, \")\"), open, /(?:\\\\.|[^\\\\\\/])*?/, close, REGEX_MODIFIERS);\n  };\n  const PERL_DEFAULT_CONTAINS = [VAR, hljs.HASH_COMMENT_MODE, hljs.COMMENT(/^=\\w/, /=cut/, {\n    endsWithParent: true\n  }), METHOD, {\n    className: 'string',\n    contains: STRING_CONTAINS,\n    variants: [{\n      begin: 'q[qwxr]?\\\\s*\\\\(',\n      end: '\\\\)',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\[',\n      end: '\\\\]',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\{',\n      end: '\\\\}',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*\\\\|',\n      end: '\\\\|',\n      relevance: 5\n    }, {\n      begin: 'q[qwxr]?\\\\s*<',\n      end: '>',\n      relevance: 5\n    }, {\n      begin: 'qw\\\\s+q',\n      end: 'q',\n      relevance: 5\n    }, {\n      begin: '\\'',\n      end: '\\'',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: '\"',\n      end: '\"'\n    }, {\n      begin: '`',\n      end: '`',\n      contains: [hljs.BACKSLASH_ESCAPE]\n    }, {\n      begin: /\\{\\w+\\}/,\n      relevance: 0\n    }, {\n      begin: '-?\\\\w+\\\\s*=>',\n      relevance: 0\n    }]\n  }, NUMBER, {\n    // regexp container\n    begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n    keywords: 'split return print reverse grep',\n    relevance: 0,\n    contains: [hljs.HASH_COMMENT_MODE, {\n      className: 'regexp',\n      variants: [\n      // allow matching common delimiters\n      {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, {\n          capture: true\n        }))\n      },\n      // and then paired delmis\n      {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\")\n      }, {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\")\n      }, {\n        begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\")\n      }],\n      relevance: 2\n    }, {\n      className: 'regexp',\n      variants: [{\n        // could be a comment in many languages so do not count\n        // as relevant\n        begin: /(m|qr)\\/\\//,\n        relevance: 0\n      },\n      // prefix is optional with /regex/\n      {\n        begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//)\n      },\n      // allow matching common delimiters\n      {\n        begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, {\n          capture: true\n        }), /\\1/)\n      },\n      // allow common paired delmins\n      {\n        begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/)\n      }, {\n        begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/)\n      }, {\n        begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/)\n      }]\n    }]\n  }, {\n    className: 'function',\n    beginKeywords: 'sub method',\n    end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n    excludeEnd: true,\n    relevance: 5,\n    contains: [hljs.TITLE_MODE, ATTR]\n  }, {\n    className: 'class',\n    beginKeywords: 'class',\n    end: '[;{]',\n    excludeEnd: true,\n    relevance: 5,\n    contains: [hljs.TITLE_MODE, ATTR, NUMBER]\n  }, {\n    begin: '-\\\\w\\\\b',\n    relevance: 0\n  }, {\n    begin: \"^__DATA__$\",\n    end: \"^__END__$\",\n    subLanguage: 'mojolicious',\n    contains: [{\n      begin: \"^@@.*\",\n      end: \"$\",\n      className: \"comment\"\n    }]\n  }];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n  return {\n    name: 'Perl',\n    aliases: ['pl', 'pm'],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\nexport { perl as default };","map":{"version":3,"names":["perl","hljs","regex","KEYWORDS","REGEX_MODIFIERS","PERL_KEYWORDS","$pattern","keyword","join","SUBST","className","begin","end","keywords","METHOD","ATTR","scope","match","VAR","variants","concat","relevance","contains","NUMBER","STRING_CONTAINS","BACKSLASH_ESCAPE","REGEX_DELIMS","PAIRED_DOUBLE_RE","prefix","open","close","middle","PAIRED_RE","PERL_DEFAULT_CONTAINS","HASH_COMMENT_MODE","COMMENT","endsWithParent","RE_STARTERS_RE","either","capture","beginKeywords","excludeEnd","TITLE_MODE","subLanguage","name","aliases","default"],"sources":["/Users/yiyiwang/Documents/coding/projects/portfolio/node_modules/highlight.js/es/languages/perl.js"],"sourcesContent":["/*\nLanguage: Perl\nAuthor: Peter Leonov <gojpeg@yandex.ru>\nWebsite: https://www.perl.org\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction perl(hljs) {\n  const regex = hljs.regex;\n  const KEYWORDS = [\n    'abs',\n    'accept',\n    'alarm',\n    'and',\n    'atan2',\n    'bind',\n    'binmode',\n    'bless',\n    'break',\n    'caller',\n    'chdir',\n    'chmod',\n    'chomp',\n    'chop',\n    'chown',\n    'chr',\n    'chroot',\n    'class',\n    'close',\n    'closedir',\n    'connect',\n    'continue',\n    'cos',\n    'crypt',\n    'dbmclose',\n    'dbmopen',\n    'defined',\n    'delete',\n    'die',\n    'do',\n    'dump',\n    'each',\n    'else',\n    'elsif',\n    'endgrent',\n    'endhostent',\n    'endnetent',\n    'endprotoent',\n    'endpwent',\n    'endservent',\n    'eof',\n    'eval',\n    'exec',\n    'exists',\n    'exit',\n    'exp',\n    'fcntl',\n    'field',\n    'fileno',\n    'flock',\n    'for',\n    'foreach',\n    'fork',\n    'format',\n    'formline',\n    'getc',\n    'getgrent',\n    'getgrgid',\n    'getgrnam',\n    'gethostbyaddr',\n    'gethostbyname',\n    'gethostent',\n    'getlogin',\n    'getnetbyaddr',\n    'getnetbyname',\n    'getnetent',\n    'getpeername',\n    'getpgrp',\n    'getpriority',\n    'getprotobyname',\n    'getprotobynumber',\n    'getprotoent',\n    'getpwent',\n    'getpwnam',\n    'getpwuid',\n    'getservbyname',\n    'getservbyport',\n    'getservent',\n    'getsockname',\n    'getsockopt',\n    'given',\n    'glob',\n    'gmtime',\n    'goto',\n    'grep',\n    'gt',\n    'hex',\n    'if',\n    'index',\n    'int',\n    'ioctl',\n    'join',\n    'keys',\n    'kill',\n    'last',\n    'lc',\n    'lcfirst',\n    'length',\n    'link',\n    'listen',\n    'local',\n    'localtime',\n    'log',\n    'lstat',\n    'lt',\n    'ma',\n    'map',\n    'method',\n    'mkdir',\n    'msgctl',\n    'msgget',\n    'msgrcv',\n    'msgsnd',\n    'my',\n    'ne',\n    'next',\n    'no',\n    'not',\n    'oct',\n    'open',\n    'opendir',\n    'or',\n    'ord',\n    'our',\n    'pack',\n    'package',\n    'pipe',\n    'pop',\n    'pos',\n    'print',\n    'printf',\n    'prototype',\n    'push',\n    'q|0',\n    'qq',\n    'quotemeta',\n    'qw',\n    'qx',\n    'rand',\n    'read',\n    'readdir',\n    'readline',\n    'readlink',\n    'readpipe',\n    'recv',\n    'redo',\n    'ref',\n    'rename',\n    'require',\n    'reset',\n    'return',\n    'reverse',\n    'rewinddir',\n    'rindex',\n    'rmdir',\n    'say',\n    'scalar',\n    'seek',\n    'seekdir',\n    'select',\n    'semctl',\n    'semget',\n    'semop',\n    'send',\n    'setgrent',\n    'sethostent',\n    'setnetent',\n    'setpgrp',\n    'setpriority',\n    'setprotoent',\n    'setpwent',\n    'setservent',\n    'setsockopt',\n    'shift',\n    'shmctl',\n    'shmget',\n    'shmread',\n    'shmwrite',\n    'shutdown',\n    'sin',\n    'sleep',\n    'socket',\n    'socketpair',\n    'sort',\n    'splice',\n    'split',\n    'sprintf',\n    'sqrt',\n    'srand',\n    'stat',\n    'state',\n    'study',\n    'sub',\n    'substr',\n    'symlink',\n    'syscall',\n    'sysopen',\n    'sysread',\n    'sysseek',\n    'system',\n    'syswrite',\n    'tell',\n    'telldir',\n    'tie',\n    'tied',\n    'time',\n    'times',\n    'tr',\n    'truncate',\n    'uc',\n    'ucfirst',\n    'umask',\n    'undef',\n    'unless',\n    'unlink',\n    'unpack',\n    'unshift',\n    'untie',\n    'until',\n    'use',\n    'utime',\n    'values',\n    'vec',\n    'wait',\n    'waitpid',\n    'wantarray',\n    'warn',\n    'when',\n    'while',\n    'write',\n    'x|0',\n    'xor',\n    'y|0'\n  ];\n\n  // https://perldoc.perl.org/perlre#Modifiers\n  const REGEX_MODIFIERS = /[dualxmsipngr]{0,12}/; // aa and xx are valid, making max length 12\n  const PERL_KEYWORDS = {\n    $pattern: /[\\w.]+/,\n    keyword: KEYWORDS.join(\" \")\n  };\n  const SUBST = {\n    className: 'subst',\n    begin: '[$@]\\\\{',\n    end: '\\\\}',\n    keywords: PERL_KEYWORDS\n  };\n  const METHOD = {\n    begin: /->\\{/,\n    end: /\\}/\n    // contains defined later\n  };\n  const ATTR = {\n    scope: 'attr',\n    match: /\\s+:\\s*\\w+(\\s*\\(.*?\\))?/,\n  };\n  const VAR = {\n    scope: 'variable',\n    variants: [\n      { begin: /\\$\\d/ },\n      { begin: regex.concat(\n        /[$%@](?!\")(\\^\\w\\b|#\\w+(::\\w+)*|\\{\\w+\\}|\\w+(::\\w*)*)/,\n        // negative look-ahead tries to avoid matching patterns that are not\n        // Perl at all like $ident$, @ident@, etc.\n        `(?![A-Za-z])(?![@$%])`\n        )\n      },\n      {\n        // Only $= is a special Perl variable and one can't declare @= or %=.\n        begin: /[$%@](?!\")[^\\s\\w{=]|\\$=/,\n        relevance: 0\n      }\n    ],\n    contains: [ ATTR ],\n  };\n  const NUMBER = {\n    className: 'number',\n    variants: [\n      // decimal numbers:\n      // include the case where a number starts with a dot (eg. .9), and\n      // the leading 0? avoids mixing the first and second match on 0.x cases\n      { match: /0?\\.[0-9][0-9_]+\\b/ },\n      // include the special versioned number (eg. v5.38)\n      { match: /\\bv?(0|[1-9][0-9_]*(\\.[0-9_]+)?|[1-9][0-9_]*)\\b/ },\n      // non-decimal numbers:\n      { match: /\\b0[0-7][0-7_]*\\b/ },\n      { match: /\\b0x[0-9a-fA-F][0-9a-fA-F_]*\\b/ },\n      { match: /\\b0b[0-1][0-1_]*\\b/ },\n    ],\n    relevance: 0\n  };\n  const STRING_CONTAINS = [\n    hljs.BACKSLASH_ESCAPE,\n    SUBST,\n    VAR\n  ];\n  const REGEX_DELIMS = [\n    /!/,\n    /\\//,\n    /\\|/,\n    /\\?/,\n    /'/,\n    /\"/, // valid but infrequent and weird\n    /#/ // valid but infrequent and weird\n  ];\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_DOUBLE_RE = (prefix, open, close = '\\\\1') => {\n    const middle = (close === '\\\\1')\n      ? close\n      : regex.concat(close, open);\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      middle,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  /**\n   * @param {string|RegExp} prefix\n   * @param {string|RegExp} open\n   * @param {string|RegExp} close\n   */\n  const PAIRED_RE = (prefix, open, close) => {\n    return regex.concat(\n      regex.concat(\"(?:\", prefix, \")\"),\n      open,\n      /(?:\\\\.|[^\\\\\\/])*?/,\n      close,\n      REGEX_MODIFIERS\n    );\n  };\n  const PERL_DEFAULT_CONTAINS = [\n    VAR,\n    hljs.HASH_COMMENT_MODE,\n    hljs.COMMENT(\n      /^=\\w/,\n      /=cut/,\n      { endsWithParent: true }\n    ),\n    METHOD,\n    {\n      className: 'string',\n      contains: STRING_CONTAINS,\n      variants: [\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\(',\n          end: '\\\\)',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\[',\n          end: '\\\\]',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\{',\n          end: '\\\\}',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*\\\\|',\n          end: '\\\\|',\n          relevance: 5\n        },\n        {\n          begin: 'q[qwxr]?\\\\s*<',\n          end: '>',\n          relevance: 5\n        },\n        {\n          begin: 'qw\\\\s+q',\n          end: 'q',\n          relevance: 5\n        },\n        {\n          begin: '\\'',\n          end: '\\'',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: '\"',\n          end: '\"'\n        },\n        {\n          begin: '`',\n          end: '`',\n          contains: [ hljs.BACKSLASH_ESCAPE ]\n        },\n        {\n          begin: /\\{\\w+\\}/,\n          relevance: 0\n        },\n        {\n          begin: '-?\\\\w+\\\\s*=>',\n          relevance: 0\n        }\n      ]\n    },\n    NUMBER,\n    { // regexp container\n      begin: '(\\\\/\\\\/|' + hljs.RE_STARTERS_RE + '|\\\\b(split|return|print|reverse|grep)\\\\b)\\\\s*',\n      keywords: 'split return print reverse grep',\n      relevance: 0,\n      contains: [\n        hljs.HASH_COMMENT_MODE,\n        {\n          className: 'regexp',\n          variants: [\n            // allow matching common delimiters\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", regex.either(...REGEX_DELIMS, { capture: true })) },\n            // and then paired delmis\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\(\", \"\\\\)\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\[\", \"\\\\]\") },\n            { begin: PAIRED_DOUBLE_RE(\"s|tr|y\", \"\\\\{\", \"\\\\}\") }\n          ],\n          relevance: 2\n        },\n        {\n          className: 'regexp',\n          variants: [\n            {\n              // could be a comment in many languages so do not count\n              // as relevant\n              begin: /(m|qr)\\/\\//,\n              relevance: 0\n            },\n            // prefix is optional with /regex/\n            { begin: PAIRED_RE(\"(?:m|qr)?\", /\\//, /\\//) },\n            // allow matching common delimiters\n            { begin: PAIRED_RE(\"m|qr\", regex.either(...REGEX_DELIMS, { capture: true }), /\\1/) },\n            // allow common paired delmins\n            { begin: PAIRED_RE(\"m|qr\", /\\(/, /\\)/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\[/, /\\]/) },\n            { begin: PAIRED_RE(\"m|qr\", /\\{/, /\\}/) }\n          ]\n        }\n      ]\n    },\n    {\n      className: 'function',\n      beginKeywords: 'sub method',\n      end: '(\\\\s*\\\\(.*?\\\\))?[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE, ATTR ]\n    },\n    {\n      className: 'class',\n      beginKeywords: 'class',\n      end: '[;{]',\n      excludeEnd: true,\n      relevance: 5,\n      contains: [ hljs.TITLE_MODE, ATTR, NUMBER ]\n    },\n    {\n      begin: '-\\\\w\\\\b',\n      relevance: 0\n    },\n    {\n      begin: \"^__DATA__$\",\n      end: \"^__END__$\",\n      subLanguage: 'mojolicious',\n      contains: [\n        {\n          begin: \"^@@.*\",\n          end: \"$\",\n          className: \"comment\"\n        }\n      ]\n    }\n  ];\n  SUBST.contains = PERL_DEFAULT_CONTAINS;\n  METHOD.contains = PERL_DEFAULT_CONTAINS;\n\n  return {\n    name: 'Perl',\n    aliases: [\n      'pl',\n      'pm'\n    ],\n    keywords: PERL_KEYWORDS,\n    contains: PERL_DEFAULT_CONTAINS\n  };\n}\n\nexport { perl as default };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}